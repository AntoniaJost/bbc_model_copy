"""The exploit_social_learning.world class.

In this module the exploit_social_learning World mixing class inherits from
World_ in that basic variables and parameters are defined.
"""
# This file is part of pycopancore.
#
# Copyright (C) 2016 by COPAN team at Potsdam Institute for Climate Impact
# Research
#
# URL: <http://www.pik-potsdam.de/copan/software>
# License: MIT license

#
#  Imports
#

from pycopancore.model_components import abstract
from .interface import World_

# Should the type of graph already be determined?
# Like igraph, networkx, sparse matrix, ...?
# from igraph import Graph


class World (World_, abstract.World):
    """Define properties of exploit_social_learning.world.

    Inherits from World_ as the interface with all necessary variables
    and parameters.
    """

    #
    #  Definitions of internal methods
    #

    def __init__(self,
                 *,
                 waiting_time=1,
                 **kwargs
                 ):
        """Initialize an instance of World.

        Parameters
        ----------
        waiting_time
        """
        super(World, self).__init__(**kwargs)

        self.waiting_time = waiting_time

    processes = []

#
#  Definitions of further methods
#
