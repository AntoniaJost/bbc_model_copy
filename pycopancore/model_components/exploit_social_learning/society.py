"""The exploit_social_learning society module has some dynamics.

That's about it.
"""

# This file is part of pycopancore.
#
# Copyright (C) 2016 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>
# License: MIT license

# from pycopancore import ODE, Step, Explicit, Event
from pycopancore.model_components import abstract
from . import interface as I
import numpy as np


class Society(I.Society, abstract.Society):
    """Define properties of exploit_social_learning society.

    Inherits from Society_ as the interface
    with all necessary variables and parameters.
    """

    def __init__(self,
                 *,
                 strategy=0,
                 imitation_tendency=1,
                 rewiring_prob=0,
                 average_waiting_time=1,
                 **kwargs
                 ):
        """Initialize an instance of Society."""
        super(Society, self).__init__(**kwargs)

        self.strategy = strategy
        self.imitation_tendency = imitation_tendency
        self.rewiring_prob = rewiring_prob
        self.average_waiting_time = average_waiting_time
        self.update_time = np.random.exponential(self.average_waiting_time)

    @property
    def harvest_rate(self):
        """Determine the harvest rate of this society."""
        # TODO:
        # This should be connected simple_extraction.society.harvest_rate
        return np.random.rand()

    processes = []
