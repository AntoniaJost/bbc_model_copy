"""Interface module for the exploit_social_learning component."""

# This file is part of pycopancore.
#
# Copyright (C) 2016 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>
# License: MIT license

#
#  Imports
#

from pycopancore import Variable

#
# Define class World_
#


class World_(object):
    """Define Interface for World."""

    agent_list = Variable('list of all agents')

#    def has_neighbor(self, individual): raise NotImplementedError


#
#  Define class Individual_
#


class Individual_(object):
    """Define Interface for Individual."""

    strategy = Variable('harvesting strategy')
    imitation_tendency = Variable('imitation tendency (former rationality)')
    rewiring_prob = Variable('rewiring probability')
    waiting_time = Variable('estimated waiting time tau')
    update_time = Variable('next update time')


#     @property
#     def harvest_rate(self): raise NotImplementedError  # harvest rate


#
#  Define class Culture_
#


class Culture_(object):
    """Define Interface for Culture."""

    step_width = Variable('step width')
    last_execution = Variable('last time a step was executed')
    culture_world = Variable('world of culture process')


#
#  Define class Model_
#


class Model_(object):
    """Define Interface for Model."""

    name = "Exploit Social Learning"
    description = 'The Exploit social learning dynamics /'
    'including reward based imitation behaviour'
    requires = []
