"""Interface module for the exploit_social_learning component."""

# This file is part of pycopancore.
#
# Copyright (C) 2016 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>
# License: MIT license

from pycopancore import Variable


class World(object):
    """Define Interface for World."""

    contact_network = Variable('contact network', 'network')
    agent_list = Variable('list of all agents', 'all agents in network')

#    def has_neighbor(self, individual): raise NotImplementedError


class Individual(object):
    """Define Interface for Individual."""

    strategy = Variable('harvesting strategy', 'harvesting strategy indiv.')
    imitation_tendency = Variable('imitation tendency', 'former rationality')
    rewiring_prob = Variable('rewiring probability', 'rew. prob.')
    average_waiting_time = Variable('estimated waiting time tau', 'tau')
    update_time = Variable('next update time', 'next time for update')


#     @property
#     def harvest_rate(self): raise NotImplementedError  # harvest rate


class Society(object):
    """Define Interface for Society."""

    strategy = Variable('harvesting strategy', 'harvesting strategy indiv.')
    imitation_tendency = Variable('imitation tendency', 'former rationality')
    rewiring_prob = Variable('rewiring probability', 'rew. prob.')
    average_waiting_time = Variable('estimated waiting time tau', 'tau')
    update_time = Variable('next update time', 'next time for update')


class Culture(object):
    """Define Interface for Culture."""

    last_execution_time = Variable('last exec.time', 'last time a step was executed')
    culture_world = Variable('culture world', 'world of culture process')
    consensus = Variable('consensus state', 'indicating if consensus is there')


class Model(object):
    """Define Interface for Model."""

    name = "Exploit Social Learning"
    description = 'The Exploit social learning dynamics /'
    'including reward based imitation behaviour'
    requires = []
