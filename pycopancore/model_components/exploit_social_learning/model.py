"""The exploit_social_learning model.

It includes reward based imitation behaviour.
"""

# This file is part of pycopancore.
#
# Copyright (C) 2016 by COPAN team at Potsdam Institute for Climate
# Impact Research
#
# URL: <http://www.pik-potsdam.de/copan/software>
# License: MIT license

#
#  Imports
#

from . import interface as IF
from pycopancore.model_components import abstract
from . import World
from . import Individual
from . import Society
from . import Culture

#
#  Define class Model
#


class Model(IF.Model, abstract.Model):
    """Define properties of the Exploit_social_learning model module.

    Inherits from Model_ as the
    interface with all necessary variables and parameters.
    """

    #
    # Mixins
    #

    # Use Mixins as wanted

    entity_types = [World, Individual, Society]
    process_taxa = [Culture]

    def __init__(self,
                 **kwargs
                 ):
        """Initialize an instance of Exploit_social_learning model.

        Parameters
        ----------
        kwargs
        """
        super().__init__(**kwargs)

        print('     Exploit social learning model component instantiated')

    def __repr__(self):
        """Return a string representation of the object of dummy.Model."""
        return (super().__repr__() +
                'exploit_social_learning.model object')
