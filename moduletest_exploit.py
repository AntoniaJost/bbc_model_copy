"""Moduletest for the exploit model.

A study to test the runner with the exploit model.
It includes the module components exploit_social_learning,
most_simple_vegetation and simple_extraction.
"""

import numpy as np

from pycopancore.models import exploit
from pycopancore.runners.runner import Runner

number_cells = 10
number_individuals_sust = 5
number_individuals_nonsust = 5


exploit.Model.configure()

for c in range(number_cells):
    exploit.Cell(stock=0.5, capacity=1, growth_rate=1)
individuals = [exploit.Individual(strategy=0, imitation_tendency=1) for i in range(number_individuals_nonsust)]
for i in range(number_individuals_sust):
    individuals.append(exploit.Individual(strategy=1, imitation_tendency=1))
A = np.ones(10)-np.eye(10)
world = exploit.World(agent_list=individuals, contact_network=A)
# print('exploit.Cell.entities= ', exploit.Cell.entities)
# print('\n instantiating model')
print('initializing model now:')
m = exploit.Model()
print('\n runner starting')
r = Runner(model=m)
traj = r.run(t_1=10, dt=.1)
print(traj)
